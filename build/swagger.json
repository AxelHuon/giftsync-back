{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"RegisterUserResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"code": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"code"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Error": {
				"properties": {
					"message": {
						"type": "string"
					},
					"code": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"code"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterUserRequest": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SignInUserResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"accessToken": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"firstName",
					"lastName",
					"email",
					"accessToken",
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SignInUserRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RefreshTokenResponse": {
				"properties": {
					"accessToken": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"accessToken",
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RefreshTokenRequest": {
				"properties": {
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "noel-listing-back-end",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/auth/signup": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"200": {
						"description": "User successfully registered",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/RegisterUserResponse"
										},
										{
											"$ref": "#/components/schemas/Error"
										}
									]
								}
							}
						},
						"headers": {
							"RegisterUserResponse": {
								"schema": {
									"$ref": "#/components/schemas/RegisterUserResponse"
								}
							}
						}
					},
					"400": {
						"description": "Email is already associated with an account",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"500": {
						"description": "Error in registering user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterUserRequest"
							}
						}
					}
				}
			}
		},
		"/auth/signin": {
			"post": {
				"operationId": "SignInUser",
				"responses": {
					"200": {
						"description": "User successfully signed in",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/SignInUserResponse"
										},
										{
											"$ref": "#/components/schemas/Error"
										}
									]
								}
							}
						},
						"headers": {
							"SignInUserResponse": {
								"schema": {
									"$ref": "#/components/schemas/SignInUserResponse"
								}
							}
						}
					},
					"400": {
						"description": "Email and password are required",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"401": {
						"description": "Incorrect email and password combination",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"500": {
						"description": "Error in signIn user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignInUserRequest"
							}
						}
					}
				}
			}
		},
		"/auth/refresh-token": {
			"post": {
				"operationId": "RefreshToken",
				"responses": {
					"200": {
						"description": "Tokens successfully refreshed",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/RefreshTokenResponse"
										},
										{
											"$ref": "#/components/schemas/Error"
										}
									]
								}
							}
						},
						"headers": {
							"RefreshTokenResponse": {
								"schema": {
									"$ref": "#/components/schemas/RefreshTokenResponse"
								}
							}
						}
					},
					"403": {
						"description": "Refresh Token is required!",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"404": {
						"description": "Invalid refresh token",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RefreshTokenRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}